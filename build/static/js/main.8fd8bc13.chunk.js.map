{"version":3,"sources":["images/mr-beast-head.png","images/chat-bubble.svg","images/current-logo-indigo-2.svg","components/ErrorMessage.js","components/ApplyForm.js","components/NavBar.js","components/Main.js","index.js"],"names":["module","exports","require","ErrorMessage","chatBubbleErrorMessages","errorMessages","errorKey","push","key","className","mrBeastHead","chatBubble","ApplyForm","useState","fullName","email","optionalMessage","productType","formValues","setFormValues","chatBubbleMessage","setChatBubbleMessage","isError","setIsError","setChatBubbleErrorMessages","currentLocation","window","location","search","useEffect","queryParams","URLSearchParams","prefillFullName","get","prefillEmail","length","test","validate","formKey","errorMessage","successMessage","isValid","src","alt","onSubmit","e","preventDefault","console","log","htmlFor","type","name","maxLength","value","onChange","target","onBlur","placeholder","disabled","navLogo","NavBar","isHamburgerOpen","setIsHamBurgerOpen","href","role","tabIndex","onClick","AppComponent","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8fd8bc13.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mr-beast-head.71ebbce7.png\";","module.exports = __webpack_public_path__ + \"static/media/chat-bubble.571e48b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/current-logo-indigo-2.69954b67.svg\";","import React from 'react';\r\nrequire('../styles/ApplyForm.css');\r\n\r\n\r\nconst ErrorMessage = ({chatBubbleErrorMessages}) => {\r\n  const errorMessages = [];\r\n  for(let errorKey in chatBubbleErrorMessages) {\r\n    if(chatBubbleErrorMessages[errorKey]) {\r\n      errorMessages.push(\r\n        <p \r\n          key={`${errorKey}Error`}\r\n          className=\"applyNowBubbleErrorText\"\r\n        >\r\n          {chatBubbleErrorMessages[errorKey]}\r\n        </p>);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"applyNowBubbleErrorTextContainer\">\r\n      {errorMessages}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage;","import React, { useEffect, useState } from 'react'\r\nimport ErrorMessage from './ErrorMessage';\r\nrequire('../styles/ApplyForm.css');\r\n\r\nconst mrBeastHead = require('../images/mr-beast-head.png');\r\nconst chatBubble = require('../images/chat-bubble.svg');\r\n\r\nconst ApplyForm = () => {\r\n  const [formValues, setFormValues] = useState({\r\n    fullName: '',\r\n    email: '',\r\n    optionalMessage: '',\r\n    productType: ''\r\n  });\r\n  const [chatBubbleMessage, setChatBubbleMessage] = useState('Apply Below!');\r\n  const [isError, setIsError] = useState(false);\r\n  const [chatBubbleErrorMessages, setChatBubbleErrorMessages] = useState({\r\n    fullName: '',\r\n    email: '',\r\n    productType: ''\r\n  });\r\n\r\n  const currentLocation = window.location.search;\r\n\r\n  useEffect(() => {\r\n    const queryParams = new URLSearchParams(currentLocation);\r\n    const prefillFullName = queryParams.get('fullName');\r\n    const prefillEmail = queryParams.get('email');\r\n\r\n    if(prefillFullName?.length < 25) {\r\n        setFormValues({\r\n          ...formValues,\r\n          fullName: prefillFullName\r\n        });\r\n    } else if(prefillEmail?.length < 25 && /\\S+@\\S+\\.\\S+/.test(prefillEmail)) {\r\n      setFormValues({\r\n        ...formValues,\r\n        email: prefillEmail\r\n      });\r\n    } \r\n  }, [currentLocation]);\r\n  \r\n\r\n  const validate = (formKey, errorMessage, successMessage) => {\r\n      let isValid;\r\n      if(!formValues[formKey]) {\r\n        isValid = false;\r\n        setIsError(true);\r\n        setChatBubbleErrorMessages({\r\n          ...chatBubbleErrorMessages,\r\n          [formKey]: errorMessage\r\n        });\r\n      } else if(formKey === 'email' && !/\\S+@\\S+\\.\\S+/.test(formValues.email)) {\r\n        isValid = false;\r\n        setIsError(true);\r\n        setChatBubbleErrorMessages({\r\n          ...chatBubbleErrorMessages,\r\n          email: 'Email must be valid'\r\n        });\r\n      } else {\r\n        isValid = true;\r\n        setChatBubbleMessage(successMessage)\r\n        if(chatBubbleErrorMessages[formKey]) {\r\n          setIsError(false);\r\n          setChatBubbleErrorMessages({\r\n            ...chatBubbleErrorMessages,\r\n            [formKey]: ''\r\n          });\r\n        }\r\n    }\r\n\r\n    return isValid\r\n  }\r\n\r\n  return (\r\n    <section className=\"applyFormContainer\">\r\n      <div className=\"applyFormChatBox\">\r\n        <img \r\n            src={mrBeastHead} alt=\"Mr. Beast\" \r\n            className=\"applyFormMrBeastHead\"\r\n          />\r\n        <div className=\"applyFormChatBubbleContainer\">\r\n          <img \r\n            src={chatBubble} \r\n            alt=\"Chat Bubble\" \r\n            className=\"applyFormChatBubble\"\r\n          />\r\n          { !isError && <p className=\"applyFormBubbleText\" key={`${chatBubbleMessage}Message`}>{chatBubbleMessage}</p> }\r\n          { isError && <ErrorMessage chatBubbleErrorMessages={chatBubbleErrorMessages}/> }\r\n        </div>\r\n      </div>\r\n      <form \r\n        className=\"applyForm\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          if(formValues.fullName && formValues.email && formValues.productType) {\r\n            console.log(\"SUBMITTING\", [\r\n              formValues.fullName,\r\n              formValues.email,\r\n              formValues.productType,\r\n              formValues.optionalMessage\r\n            ]);\r\n          } else {\r\n            setChatBubbleMessage(\"Fill out your info first!\");\r\n          }\r\n        }}\r\n      >\r\n        <label htmlFor=\"fullName\">Full Name:</label>\r\n        <input \r\n          type=\"text\" \r\n          name=\"fullName\"\r\n          maxLength={25}\r\n          value={formValues.fullName}\r\n          onChange={e => setFormValues({\r\n            ...formValues,\r\n            fullName: e.target.value\r\n          })}\r\n          onBlur={() => validate('fullName', 'Please enter your full name.', `Welcome ${formValues.fullName}!`)}\r\n          placeholder=\"Please enter your full name.\"\r\n        />\r\n        <label htmlFor=\"email\">Email Address:</label>\r\n        <input \r\n          type=\"email\" \r\n          name=\"email\"\r\n          value={formValues.email}\r\n          maxLength={25}\r\n          placeholder=\"Please enter your email\"\r\n          onChange={e => setFormValues({\r\n            ...formValues,\r\n            email: e.target.value\r\n          })}\r\n          onBlur={() => validate('email', 'Please enter an email', 'Email? Check!')}\r\n        />\r\n        <label htmlFor=\"optionalMessage\">Tell us why you're choosing Current! (Optional)</label>\r\n        <textarea\r\n          name=\"optionalMessage\"\r\n          placeholder=\"Overdraft protection, getting paid early, etc...\"\r\n          value={formValues.optionalMessage}\r\n          maxLength={140}\r\n          onChange={e => setFormValues({\r\n            ...formValues,\r\n            email: e.target.value\r\n          })}\r\n        ></textarea>\r\n        <label htmlFor=\"productType\">Which product would you like to apply for?</label>\r\n        <div className=\"applyFormSubmitLine\">\r\n          <select \r\n            name=\"productType\"\r\n            value={formValues.productType}\r\n            onChange={e => setFormValues({\r\n              ...formValues,\r\n              productType: e.target.value\r\n            })}\r\n            onBlur={() => validate('productType', 'Please select a product.', `You selected ${formValues.productType}.`)}\r\n          >\r\n            <option value=\"\">Please select</option>\r\n            <option value=\"individual\">Individual</option>\r\n            <option value=\"parent\">Parent</option>\r\n            <option value=\"teen\">Teen</option>\r\n          </select>\r\n          { !isError && <button className=\"applyFormSubmit\">Submit</button> }\r\n          { isError && <button disabled className=\"applyFormSubmitDisabled\">Oops!</button> }\r\n        </div>\r\n      </form>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default ApplyForm","import React, { useState } from 'react';\r\nrequire('../styles/NavBar.css');\r\n\r\nconst navLogo = require('../images/current-logo-indigo-2.svg');\r\n\r\nconst NavBar = () => {\r\n  const [ isHamburgerOpen, setIsHamBurgerOpen ] = useState(false);\r\n  return (\r\n    <nav className=\"navBar\">\r\n      <a href=\"https://current.com/\">\r\n        <span role=\"button\" tabIndex=\"0\">\r\n          <img className=\"navLogo\" alt=\"Current Logo\" src={navLogo} />\r\n        </span>\r\n      </a>\r\n      <div className=\"navMenu\">\r\n        <a href=\"/faster-direct-deposit\" className=\"navLink\">Benefits</a>\r\n        <a href=\"/blog\" className=\"navLink\">Community</a>\r\n        <a href=\"/about-us\" className=\"navLink\">About Us</a>\r\n      </div>\r\n      <button className=\"navSignUp\">Sign Up</button>\r\n      <div className={`navHamburger ${isHamburgerOpen ? 'hamburgerOpen' : 'hamburgerClosed'}`} onClick={() => setIsHamBurgerOpen(!isHamburgerOpen)}>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar","import React, { useState } from 'react';\r\nimport ApplyForm from './ApplyForm';\r\nimport NavBar from './NavBar'\r\n\r\nrequire('normalize.css/normalize.css');\r\nrequire('../styles/Main.css');\r\n\r\n\r\nconst AppComponent = () => {\r\n    return (\r\n      <div className=\"mainContainer\">\r\n        <NavBar />\r\n        <ApplyForm />\r\n      </div>\r\n    );\r\n}\r\n\r\nAppComponent.defaultProps = {\r\n};\r\n\r\nexport default AppComponent;\r\n","import 'core-js/fn/object/assign';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/Main';\n\n// Render the main component into the dom\nReactDOM.render(<App />, document.getElementById('app'));\n"],"sourceRoot":""}