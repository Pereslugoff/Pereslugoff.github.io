{"version":3,"sources":["images/beast-circle-text-d9b6f5e9191ab2358f498f8b25dcfe69.svg","images/mr-beast-head.png","images/chat-bubble.svg","images/current-logo-indigo-2.svg","components/ErrorMessage.js","components/VerifyModal.js","components/ApplyForm.js","components/NavBar.js","components/Main.js","index.js"],"names":["module","exports","require","ErrorMessage","chatBubbleErrorMessages","errorMessages","errorKey","push","key","className","mrBeastCircle","VerifyModal","formValues","setIsVerifyModalOpen","formValuesList","formItem","toUpperCase","onClick","fullName","email","optionalMessage","productType","src","alt","mrBeastHead","chatBubble","ApplyForm","useState","setFormValues","chatBubbleMessage","setChatBubbleMessage","isError","setIsError","setChatBubbleErrorMessages","isVerifyModalOpen","currentLocation","window","location","search","useEffect","queryParams","URLSearchParams","prefillFirstName","get","prefillLastName","prefillName","prefillEmail","length","test","console","log","validate","formKey","errorMessage","successMessage","onSubmit","e","preventDefault","htmlFor","type","name","maxLength","value","onChange","target","onBlur","placeholder","disabled","navLogo","NavBar","isHamburgerOpen","setIsHamBurgerOpen","href","role","tabIndex","AppComponent","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22676737.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/beast-circle-text-d9b6f5e9191ab2358f498f8b25dcfe69.99bba942.svg\";","module.exports = __webpack_public_path__ + \"static/media/mr-beast-head.71ebbce7.png\";","module.exports = __webpack_public_path__ + \"static/media/chat-bubble.571e48b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/current-logo-indigo-2.69954b67.svg\";","import React from 'react';\r\nrequire('../styles/ApplyForm.css');\r\n\r\n\r\nconst ErrorMessage = ({chatBubbleErrorMessages}) => {\r\n  const errorMessages = [];\r\n  for(let errorKey in chatBubbleErrorMessages) {\r\n    if(chatBubbleErrorMessages[errorKey]) {\r\n      errorMessages.push(\r\n        <p \r\n          key={`${errorKey}Error`}\r\n          className=\"applyNowBubbleErrorText\"\r\n        >\r\n          {chatBubbleErrorMessages[errorKey]}\r\n        </p>);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"applyNowBubbleErrorTextContainer\">\r\n      {errorMessages}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage;","import React from 'react';\nrequire('../styles/VerifyModal.css');\nconst mrBeastCircle = require('../images/beast-circle-text-d9b6f5e9191ab2358f498f8b25dcfe69.svg');\n\n\nconst VerifyModal = ({ formValues, setIsVerifyModalOpen }) => {\n  const formValuesList = []\n\n  for(let formItem in formValues) {\n    if(formValues[formItem]) {\n      formValuesList.push(<p><span>{formItem.toUpperCase()}</span></p>)\n    }\n  }\n\n  return (\n    <section \n      className=\"verifyModalContainerBackground\"\n      onClick={() => setIsVerifyModalOpen(false)}\n    >\n      <div className=\"verifyModalContainer\">\n\n        <h2 className=\"verifyModalTitle\">Does this information look correct?</h2>\n        <p><span>Full Name: </span>{formValues.fullName}</p>\n        <p><span>Email: </span>{formValues.email}</p>\n        {\n          formValues.optionalMessage && \n          <p><span>Message: </span>{formValues.optionalMessage}</p>\n        }\n        <p><span>Product Type: </span>{formValues.productType}</p>\n        <button\n          className=\"verifyModalGoBack\"\n          onClick={() => setIsVerifyModalOpen(false)}\n        >Nope, go back</button>\n        <button \n          className=\"verifyModalContinue\"\n          onClick={() => setIsVerifyModalOpen(false)}\n        >Yes, lets go!</button>\n        <img \n          src={mrBeastCircle} \n          alt=\"Mr Beast Cicle\" \n          className=\"mrBeastCircle\"\n        />\n      </div>\n\n    </section>\n  )\n}\n\nexport default VerifyModal","import React, { useEffect, useState } from 'react'\r\nimport ErrorMessage from './ErrorMessage';\r\nimport VerifyModal from './VerifyModal';\r\nrequire('../styles/ApplyForm.css');\r\n\r\nconst mrBeastHead = require('../images/mr-beast-head.png');\r\nconst chatBubble = require('../images/chat-bubble.svg');\r\n\r\nconst ApplyForm = () => {\r\n  const [formValues, setFormValues] = useState({\r\n    fullName: '',\r\n    email: '',\r\n    optionalMessage: '',\r\n    productType: ''\r\n  });\r\n  const [chatBubbleMessage, setChatBubbleMessage] = useState('Apply Below!');\r\n  const [isError, setIsError] = useState(false);\r\n  const [chatBubbleErrorMessages, setChatBubbleErrorMessages] = useState({\r\n    fullName: '',\r\n    email: '',\r\n    productType: ''\r\n  });\r\n  const [isVerifyModalOpen, setIsVerifyModalOpen] = useState(false);\r\n\r\n  const currentLocation = window.location.search;\r\n\r\n  useEffect(() => {\r\n    const queryParams = new URLSearchParams(currentLocation);\r\n    const prefillFirstName = queryParams.get('firstName');\r\n    const prefillLastName = queryParams.get('lastName');\r\n    const prefillName = prefillFirstName && prefillLastName ? `${prefillFirstName} ${prefillLastName}` : ''\r\n    const prefillEmail = queryParams.get('email');\r\n    if(prefillName?.length < 25 && (prefillEmail?.length < 30 && /\\S+@\\S+\\.\\S+/.test(prefillEmail))) {\r\n        console.log('SETTING NAME')\r\n        setFormValues({\r\n          ...formValues,\r\n          email: prefillEmail,\r\n          fullName: prefillName\r\n        });\r\n    };\r\n  }, [currentLocation]);\r\n  \r\n\r\n  const validate = (formKey, errorMessage, successMessage) => {\r\n    if(!formValues[formKey]) {\r\n      setIsError(true);\r\n      setChatBubbleErrorMessages({\r\n        ...chatBubbleErrorMessages,\r\n        [formKey]: errorMessage\r\n      });\r\n    } else if(formKey === 'email' && !/\\S+@\\S+\\.\\S+/.test(formValues.email)) {\r\n      setIsError(true);\r\n      setChatBubbleErrorMessages({\r\n        ...chatBubbleErrorMessages,\r\n        email: 'Email must be valid'\r\n      });\r\n    } else {\r\n      setChatBubbleMessage(successMessage)\r\n      if(chatBubbleErrorMessages[formKey]) {\r\n        setIsError(false);\r\n        setChatBubbleErrorMessages({\r\n          ...chatBubbleErrorMessages,\r\n          [formKey]: ''\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className=\"applyFormContainer\">\r\n      { isVerifyModalOpen && \r\n        <VerifyModal \r\n          formValues={formValues}\r\n          setIsVerifyModalOpen={setIsVerifyModalOpen}\r\n        /> \r\n      }\r\n      <div className=\"applyFormChatBox\">\r\n        <img \r\n            src={mrBeastHead} alt=\"Mr. Beast\" \r\n            className=\"applyFormMrBeastHead\"\r\n          />\r\n        <div className=\"applyFormChatBubbleContainer\">\r\n          <img \r\n            src={chatBubble} \r\n            alt=\"Chat Bubble\" \r\n            className=\"applyFormChatBubble\"\r\n          />\r\n          { !isError && <p className=\"applyFormBubbleText\" key={`${chatBubbleMessage}Message`}>{chatBubbleMessage}</p> }\r\n          { isError && <ErrorMessage chatBubbleErrorMessages={chatBubbleErrorMessages}/> }\r\n        </div>\r\n      </div>\r\n      <form \r\n        className=\"applyForm\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          if(formValues.fullName && formValues.email && formValues.productType) {\r\n            setIsVerifyModalOpen(true);\r\n            console.log(\"SUBMITTING\", [\r\n              formValues.fullName,\r\n              formValues.email,\r\n              formValues.productType,\r\n              formValues.optionalMessage\r\n            ]);\r\n          } else {\r\n            setChatBubbleMessage(\"Fill out your info first!\");\r\n          }\r\n        }}\r\n      >\r\n        <label htmlFor=\"fullName\">Full Name:</label>\r\n        <input \r\n          type=\"text\" \r\n          name=\"fullName\"\r\n          maxLength={25}\r\n          value={formValues.fullName}\r\n          onChange={e => setFormValues({\r\n            ...formValues,\r\n            fullName: e.target.value\r\n          })}\r\n          onBlur={() => validate('fullName', 'Please enter your full name.', `Welcome ${formValues.fullName}!`)}\r\n          placeholder=\"Please enter your full name.\"\r\n        />\r\n        <label htmlFor=\"email\">Email Address:</label>\r\n        <input \r\n          type=\"email\" \r\n          name=\"email\"\r\n          value={formValues.email}\r\n          maxLength={25}\r\n          placeholder=\"Please enter your email\"\r\n          onChange={e => setFormValues({\r\n            ...formValues,\r\n            email: e.target.value\r\n          })}\r\n          onBlur={() => validate('email', 'Please enter an email', 'Email? Check!')}\r\n        />\r\n        <label htmlFor=\"optionalMessage\">Tell us why you're choosing Current! (Optional)</label>\r\n        <textarea\r\n          name=\"optionalMessage\"\r\n          placeholder=\"Overdraft protection, getting paid early, etc...\"\r\n          value={formValues.optionalMessage}\r\n          maxLength={140}\r\n          onChange={e => setFormValues({\r\n            ...formValues,\r\n            optionalMessage: e.target.value\r\n          })}\r\n        ></textarea>\r\n        <label htmlFor=\"productType\">Which product would you like to apply for?</label>\r\n        <div className=\"applyFormSubmitLine\">\r\n          <select \r\n            name=\"productType\"\r\n            value={formValues.productType}\r\n            onChange={e => setFormValues({\r\n              ...formValues,\r\n              productType: e.target.value\r\n            })}\r\n            onBlur={() => validate('productType', 'Please select a product.', `You selected ${formValues.productType}.`)}\r\n          >\r\n            <option value=\"\">Please select</option>\r\n            <option value=\"Individual\">Individual</option>\r\n            <option value=\"Parent\">Parent</option>\r\n            <option value=\"Teen\">Teen</option>\r\n          </select>\r\n          { !isError && <button className=\"applyFormSubmit\">Submit</button> }\r\n          { isError && <button disabled className=\"applyFormSubmitDisabled\">Oops!</button> }\r\n        </div>\r\n      </form>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default ApplyForm","import React, { useState } from 'react';\r\nrequire('../styles/NavBar.css');\r\n\r\nconst navLogo = require('../images/current-logo-indigo-2.svg');\r\n\r\nconst NavBar = () => {\r\n  const [ isHamburgerOpen, setIsHamBurgerOpen ] = useState(false);\r\n  return (\r\n    <nav className=\"navBar\">\r\n      <a href=\"https://current.com/\">\r\n        <span role=\"button\" tabIndex=\"0\">\r\n          <img className=\"navLogo\" alt=\"Current Logo\" src={navLogo} />\r\n        </span>\r\n      </a>\r\n      <div className=\"navMenu\">\r\n        <a href=\"/faster-direct-deposit\" className=\"navLink\">Benefits</a>\r\n        <a href=\"/blog\" className=\"navLink\">Community</a>\r\n        <a href=\"/about-us\" className=\"navLink\">About Us</a>\r\n      </div>\r\n      <button className=\"navSignUp\">Sign Up</button>\r\n      <div className={`navHamburger ${isHamburgerOpen ? 'hamburgerOpen' : 'hamburgerClosed'}`} onClick={() => setIsHamBurgerOpen(!isHamburgerOpen)}>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar","import React from 'react';\r\nimport ApplyForm from './ApplyForm';\r\nimport NavBar from './NavBar'\r\n\r\nrequire('normalize.css/normalize.css');\r\nrequire('../styles/Main.css');\r\n\r\n\r\nconst AppComponent = () => {\r\n    return (\r\n      <div className=\"mainContainer\">\r\n        <NavBar />\r\n        <ApplyForm />\r\n      </div>\r\n    );\r\n}\r\n\r\nAppComponent.defaultProps = {\r\n};\r\n\r\nexport default AppComponent;\r\n","import 'core-js/fn/object/assign';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/Main';\n\n// Render the main component into the dom\nReactDOM.render(<App />, document.getElementById('app'));\n"],"sourceRoot":""}